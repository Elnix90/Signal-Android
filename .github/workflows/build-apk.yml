name: Android Build (Optimized)

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  build:
    name: Build Signal Debug
    runs-on: ubuntu-latest

    env:
      # Limit Gradle JVM memory to avoid runner OOM
      GRADLE_OPTS: "-Dorg.gradle.jvmargs=-Xmx3g -Dkotlin.daemon.jvm.options=-Xmx1g"

    steps:
      # Checkout the code
      - name: Checkout repository
        uses: actions/checkout@v3

      # Cache Gradle dependencies for faster builds
      - name: Cache Gradle
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper/
          key: gradle-${{ runner.os }}-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: gradle-${{ runner.os }}-

      # Set up Java (Signal requires Java 17)
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 17

      # Download Android SDK command line tools only (lighter than full setup)
      - name: Set up Android SDK
        uses: android-actions/setup-android@v2
        with:
          cmdline-tools-version: "9123335"  # Latest stable

      # Accept SDK licenses
      - name: Accept Android SDK licenses
        run: yes | sdkmanager --licenses

      # Build Signal debug APK (no tests, faster)
      - name: Build Signal Debug
        run: ./gradlew :app:assembleDebug --no-daemon --console=plain --max-workers=2

      # Upload the APK as an artifact for download
      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: signal-debug-apk
          path: app/build/outputs/apk/debug/app-debug.apk
